Source: ruby-minitest
Section: ruby
Priority: optional
Maintainer: Debian Ruby Extras Maintainers <pkg-ruby-extras-maintainers@lists.alioth.debian.org>
Uploaders: Lucas Nussbaum <lucas@lucas-nussbaum.net>
DM-Upload-Allowed: yes
Build-Depends: debhelper (>= 7.0.50~), gem2deb (>= 0.2.2)
Standards-Version: 3.9.1
Vcs-Git: git://git.debian.org/pkg-ruby-extras/ruby-minitest.git
Vcs-Browser: http://git.debian.org/?p=pkg-ruby-extras/ruby-minitest.git;a=summary
Homepage: http://rubyforge.org/projects/bfts
XS-Ruby-Versions: ruby1.8

Package: ruby-minitest
Architecture: all
XB-Ruby-Versions: ${ruby:Versions}
Depends: ${shlibs:Depends}, ${misc:Depends}, ruby1.8 | ruby-interpreter
Description: Ruby test tools supporting TDD, BDD, mocking, and benchmarking
 minitest provides a complete suite of testing facilities supporting
 TDD, BDD, mocking, and benchmarking.
 .
 minitest/unit is a small and incredibly fast unit testing framework.
 It provides a rich set of assertions to make your tests clean and
 readable.
 .
 minitest/spec is a functionally complete spec engine. It hooks onto
 minitest/unit and seamlessly bridges test assertions over to spec
 expectations.
 .
 minitest/benchmark is an awesome way to assert the performance of your
 algorithms in a repeatable manner. Now you can assert that your newb
 co-worker doesn't replace your linear algorithm with an exponential
 one!
 .
 minitest/mock by Steven Baker, is a beautifully tiny mock object
 framework.
 .
 minitest/pride shows pride in testing and adds coloring to your test
 output.
 .
 minitest/unit is meant to have a clean implementation for language
 implementors that need a minimal set of methods to bootstrap a working
 test suite. For example, there is no magic involved for test-case
 discovery.
